---

- name: set IAM account password policy facts
  set_fact:
    _aws_iam_configured_password_policy: {}
    _aws_iam_pp: IAM account password policy
    _aws_iam_ppurl: >-
      https://console.aws.amazon.com/iam/home#/account_settings

- name: include map of Ansible {{ _aws_iam_pp }} parameters to AWS API names
  include_vars: password_policy_map.yml

- name: set fact for configured {{ _aws_iam_pp }}
  set_fact:
    _aws_iam_configured_password_policy: >
      {{
        _aws_iam_configured_password_policy
        | combine({
            _aws_iam_password_policy_map[item.key]:
            item.value
          })
      }}
  loop: >
    {{
                aws_iam_password_policy_common | default({})
      | combine(aws_iam_password_policy        | default({}))
      | default({})
      | dict2items
    }}

- name: set fact for configured {{ _aws_iam_pp }} without implied attributes
  set_fact:
    _aws_iam_original_configured_password_policy: >
      {{ _aws_iam_configured_password_policy }}

- name: set implied policy attribute ExpirePasswords
  set_fact:
    _aws_iam_configured_password_policy: >
      {{
        _aws_iam_configured_password_policy
        | combine({
            "ExpirePasswords":
            "MaxPasswordAge" in _aws_iam_configured_password_policy
          })
      }}
  when: _aws_iam_configured_password_policy != {}

- name: get existing {{ _aws_iam_pp }}
  command: >
    aws iam get-account-password-policy
            --profile {{ aws_profile }}
            --query PasswordPolicy
  register: _aws_iam_existing_password_policy_command
  changed_when: false
  failed_when: false

- name: initialize fact for existing {{ _aws_iam_pp }}
  set_fact:
    _aws_iam_existing_password_policy: {}

- name: set fact for existing {{ _aws_iam_pp }}
  set_fact:
    _aws_iam_existing_password_policy: >
      {{ _aws_iam_existing_password_policy_command.stdout | from_json }}
  when: _aws_iam_existing_password_policy_command.stdout != ""

- block: 

  - name: update {{ _aws_iam_pp }}
    command: >
      aws iam update-account-password-policy
              --cli-input-json '{{ _aws_iam_original_configured_password_policy
                                   | to_json }}'
              --profile {{ aws_profile }}
    register: _aws_iam_update_account_password_policy
    when: _aws_iam_configured_password_policy != {}

  - name: call optional notifier
    include_role:
      name: '{{ notifier_role }}'
    vars:
      message: >
        updated <a href="{{ _aws_iam_ppurl }}">{{ _aws_iam_pp }}</a>
        in <a href="{{ _aws_iam_url }}">account {{ aws_profile }}</a>
    when: >
      notifier_role is defined and
      _aws_iam_update_account_password_policy is changed

  - name: delete {{ _aws_iam_pp }}
    command: >
      aws iam delete-account-password-policy
              --profile {{ aws_profile }}
    register: _aws_iam_delete_account_password_policy
    when: _aws_iam_configured_password_policy == {}

  - name: call optional notifier
    include_role:
      name: '{{ notifier_role }}'
    vars:
      message: >
        deleted <a href="{{ _aws_iam_ppurl }}">{{ _aws_iam_pp }}</a>
        from <a href="{{ _aws_iam_url }}">account {{ aws_profile }}</a>
    when: >
      notifier_role is defined and
      _aws_iam_delete_account_password_policy is changed

  when: >
    _aws_iam_configured_password_policy
    != _aws_iam_existing_password_policy
