---

- name: list member groups for {{ e }}
  command: >
    aws iam list-groups-for-{{ entity_type }}
            --{{ entity_type }}-name '{{ entity_name }}'
            --query 'Groups[*].GroupName'
            --profile '{{ profile }}'
  register: member_groups
  changed_when: False

- name: set member groups fact for {{ e }}
  set_fact:
    member_groups: '{{ member_groups.stdout | from_json | sort }}'

- name: set configured groups fact for {{ e }}
  set_fact:
    configured_groups:
      '{{ configured_entities[entity_name]["groups"] | default([]) | sort }}'

- name: add {{ e }} to groups
  command: >
    aws iam add-{{ entity_type }}-to-group
            --group-name '{{ item }}'
            --{{ entity_type }}-name '{{ entity_name }}'
            --profile '{{ profile }}'
  with_items: configured_groups
  when: item not in member_groups

- name: remove {{ e }} from groups
  command: >
    aws iam remove-{{ entity_type }}-from-group
            --group-name '{{ item }}'
            --{{ entity_type }}-name '{{ entity_name }}'
            --profile '{{ profile }}'
  with_items: member_groups
  when: item not in configured_groups

- name: call optional notifier
  include: 'roles/{{ notifier_role }}/tasks/main.yml'
  vars:
    message: >
      updated group memberships
      for <a href="{{ eurl }}">{{ e }}</a>
      in <a href="{{ iam_url }}">account {{ profile }}</a>
    attachments:
    - text:
      fields:

      - title: old group memberships
        value: '{{ member_groups | default(["(none)"], true) | join(", ") }}'
        short: true

      - title: new group memberships
        value: '{{ configured_groups | default(["(none)"], true) | join(", ") }}'
        short: true

  when: >
    notifier_role is defined and
    member_groups != configured_groups
